/* --- fichier: frontend/src/components/Tasks/TaskStats.module.css --- */

.statsContainer {
  background: linear-gradient(135deg, rgba(30, 30, 35, 0.8) 0%, rgba(15, 15, 20, 0.85) 100%);
  border-radius: 12px;
  padding: 1.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  color: var(--white, #ffffff);
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

/* Titre des statistiques */
.statsTitle {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 1.25rem 0;
  text-align: center;
  position: relative;
}

.statsTitle::after {
  content: '';
  position: absolute;
  width: 40px;
  height: 3px;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(253, 126, 20, 0.6);
  border-radius: 2px;
}

/* Grille des statistiques */
.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
}

/* Carte de statistique */
.statCard {
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
  padding: 1rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  border-left: 3px solid rgba(255, 255, 255, 0.2);
}

.statCard:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.08);
}

/* Variantes de couleur pour les cartes de statistiques */
.inProgressCard {
  border-left-color: rgba(33, 150, 243, 0.7);
}

.completedCard {
  border-left-color: rgba(76, 175, 80, 0.7);
}

.pendingCard {
  border-left-color: rgba(255, 170, 0, 0.7);
}

/* Icône de statistique */
.statIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--white, #ffffff);
}

.inProgressCard .statIcon {
  color: rgba(33, 150, 243, 0.9);
  background-color: rgba(33, 150, 243, 0.1);
}

.completedCard .statIcon {
  color: rgba(76, 175, 80, 0.9);
  background-color: rgba(76, 175, 80, 0.1);
}

.pendingCard .statIcon {
  color: rgba(255, 170, 0, 0.9);
  background-color: rgba(255, 170, 0, 0.1);
}

/* Informations de statistique */
.statInfo {
  display: flex;
  flex-direction: column;
}

.statLabel {
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.7);
  margin-bottom: 0.25rem;
}

.statValue {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--white, #ffffff);
}

/* Pied de page des statistiques */
.statsFooter {
  display: flex;
  justify-content: flex-end;
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.5);
  margin-top: 0.5rem;
  border-top: 1px solid rgba(255, 255, 255, 0.05);
  padding-top: 0.5rem;
}

/* Chargement */
.loadingIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 1rem 0;
  color: rgba(255, 255, 255, 0.7);
}

.loadingSpinner {
  width: 1.2rem;
  height: 1.2rem;
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-top-color: rgba(253, 126, 20, 0.6);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Messages d'erreur */
.errorMessage {
  text-align: center;
  color: rgba(255, 87, 87, 0.9);
  padding: 1rem;
  background-color: rgba(255, 87, 87, 0.1);
  border-radius: 8px;
  border: 1px solid rgba(255, 87, 87, 0.2);
}

/* Animation lors de la mise à jour des statistiques */
@keyframes refreshStats {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.03);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.statsContainer.refreshing {
  animation: refreshStats 0.5s ease-in-out;
}

/* Responsive design */
@media (max-width: 768px) {
  .statsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 480px) {
  .statsGrid {
    grid-template-columns: 1fr;
  }
}
/* --- Ajout dans frontend/src/components/Tasks/TaskStatusBoard.module.css --- */

.taskMoving {
  transition: transform 0.5s ease-out;
}

@keyframes statusChangeAnimation {
  0% { transform: translateY(-20px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

.newTaskInColumn {
  animation: statusChangeAnimation 0.5s ease-out forwards;
}
name: CI/CD Workflow (Staging)

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: false

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend with Maven
        run: mvn clean package

      - name: Run backend tests
        run: mvn test

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: false

      - name: Remove .gitmodules if exists
        run: |
          if [ -f .gitmodules ]; then
            echo ".gitmodules found. Removing it..."
            rm .gitmodules
            git rm --cached .gitmodules || true
          else
            echo "No .gitmodules file found."
          fi

      - name: List directory structure
        run: find . -type f -name "package.json" | sort

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install frontend dependencies
        run: |
          # Check if frontend directory exists and contains package.json
          if [ -f "frontend/package.json" ]; then
            cd frontend
            npm install
          # Check if client directory exists and contains package.json
          elif [ -f "client/package.json" ]; then
            cd client
            npm install
          # Try to find package.json in any subdirectory
          else
            PACKAGE_JSON_DIR=$(find . -name "package.json" -not -path "*/node_modules/*" | head -n 1 | xargs dirname)
            if [ -n "$PACKAGE_JSON_DIR" ]; then
              echo "Found package.json in $PACKAGE_JSON_DIR"
              cd "$PACKAGE_JSON_DIR"
              npm install
            else
              echo "Error: Could not find package.json in any directory"
              exit 1
            fi
          fi

      - name: Build React App
        run: |
          # Check if frontend directory exists and contains package.json
          if [ -f "frontend/package.json" ]; then
            cd frontend
            npm run build
          # Check if client directory exists and contains package.json
          elif [ -f "client/package.json" ]; then
            cd client
            npm run build
          # Try to find package.json in any subdirectory
          else
            PACKAGE_JSON_DIR=$(find . -name "package.json" -not -path "*/node_modules/*" | head -n 1 | xargs dirname)
            if [ -n "$PACKAGE_JSON_DIR" ]; then
              cd "$PACKAGE_JSON_DIR"
              npm run build
            else
              echo "Error: Could not find package.json in any directory"
              exit 1
            fi
          fi

      - name: Run frontend tests
        run: |
          # Check if frontend directory exists and contains package.json
          if [ -f "frontend/package.json" ]; then
            cd frontend
            npm test -- --watchAll=false
          # Check if client directory exists and contains package.json
          elif [ -f "client/package.json" ]; then
            cd client
            npm test -- --watchAll=false
          # Try to find package.json in any subdirectory
          else
            PACKAGE_JSON_DIR=$(find . -name "package.json" -not -path "*/node_modules/*" | head -n 1 | xargs dirname)
            if [ -n "$PACKAGE_JSON_DIR" ]; then
              cd "$PACKAGE_JSON_DIR"
              npm test -- --watchAll=false
            else
              echo "Error: Could not find package.json in any directory"
              exit 1
            fi
          fi